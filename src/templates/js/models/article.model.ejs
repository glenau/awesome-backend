/*
    Data model for working with the articles object
*/

<% if(database && databaseType === 'MongoDB') { -%>
import { Schema, model } from 'mongoose';

// Define the schema for the Article model
const ArticleSchema = new Schema(
    {
        title: {
            type: String,
            required: [true, 'Title is required'],
        },
        body: {
            type: String,
            required: [true, 'Body is required'],
        },
    },
    { versionKey: false, timestamps: true }
);

// Create the Article model using the defined schema
const Article = model('articles', ArticleSchema);

// Export the Article model
export default Article;
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
import { DataTypes } from 'sequelize';
import db from '../services/index.js';

// Defining the Article model using Sequelize's define method
const Article = db.sequelize.define('articles', {
    title: {
        type: DataTypes.STRING,
        allowNull: false,
    },
    body: {
        type: DataTypes.TEXT,
        allowNull: false,
    },
});

// Export the Article model
export default Article;
<% } -%>
<% if(!database) { -%>
import { v4 as uuidv4 } from 'uuid';

// Class definition for the Article model
class Article {
    constructor(title, body) {
        this.id = uuidv4();
        this.title = title;
        this.body = body;
        this.createdAt = new Date().toISOString();
        this.updatedAt = new Date().toISOString();
    }
}

// Export the Article model
export default Article;    
<% } -%>