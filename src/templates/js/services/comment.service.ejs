/*
    Service for working only with the database
    and comment object
*/

import Comment from '../models/comment.model.js';

// Class responsible for interacting with the comment collection in the database
class CommentService {
    // Method for creating a new comment in the database
    async createComment(data) {
<% if(database && databaseType === 'MongoDB') { -%>
        const comment = new Comment(data);
        return await comment.save();
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        const comment = Comment.build(data);
        return await comment.save();
<% } -%>
<% if(!database) { -%>
        const comment = new Comment(data.body);
        return comment;
<% } -%>
    }

    // Method for finding all comments in the database
    async findComments() {
<% if(database && databaseType === 'MongoDB') { -%>
        return await Comment.find();
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        return await Comment.findAll();
<% } -%>
<% if(!database) { -%>
        return new Comment('This is an awesome comment');
<% } -%>
    }

    // Method for finding an comment by its ID in the database
    async findCommentByID(id) {
<% if(database && databaseType === 'MongoDB') { -%>
        return await Comment.findById(id);
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        return await Comment.findByPk(id);
<% } -%>
<% if(!database) { -%>
        return new Comment('This is an awesome comment');;
<% } -%>
    }

    // Method for updating an comment by its ID in the database
    async updateCommentByID(id, data) {
<% if(database && databaseType === 'MongoDB') { -%>
        return await Comment.findByIdAndUpdate(id, data, { new: true });
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        const comment = await Comment.findByPk(id);
        return await comment.update(data);
<% } -%>
<% if(!database) { -%>
        const comment = new Comment(`${data.body} NEW`);
        return comment;
<% } -%>
    }

    // Method for deleting an comment by its ID from the database
    async deleteCommentByID(id) {
<% if(database && databaseType === 'MongoDB') { -%>
        return await Comment.findByIdAndDelete(id);
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        const comment = await Comment.findByPk(id);
        await comment.destroy();
        return comment;
<% } -%>
<% if(!database) { -%>
        const comment = new Comment('This is an awesome comment');
        return comment;
<% } -%>
    }
}

// Export an instance of the comment service for use in other modules
export default new CommentService();
