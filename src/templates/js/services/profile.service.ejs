/*
    Service for working only with the database
    and profile object
*/

import Profile from '../models/profile.model.js';

// Class responsible for interacting with the profile collection in the database
class ProfileService {
    // Method for creating a new profile in the database
    async createProfile(data) {
<% if(database && databaseType === 'MongoDB') { -%>
        const profile = new Profile(data);
        return await profile.save();
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        const profile = Profile.build(data);
        return await profile.save();
<% } -%>
<% if(!database) { -%>
        const profile = new Profile(data.name);
        return profile;
<% } -%>
    }

    // Method for finding all profiles in the database
    async findProfiles() {
<% if(database && databaseType === 'MongoDB') { -%>
        return await Profile.find();
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        return await Profile.findAll();
<% } -%>
<% if(!database) { -%>
        return new Profile('John Doe');
<% } -%>
    }

    // Method for finding an profile by its ID in the database
    async findProfileByID(id) {
<% if(database && databaseType === 'MongoDB') { -%>
        return await Profile.findById(id);
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        return await Profile.findByPk(id);
<% } -%>
<% if(!database) { -%>
        return new Profile('John Doe');;
<% } -%>
    }

    // Method for updating an profile by its ID in the database
    async updateProfileByID(id, data) {
<% if(database && databaseType === 'MongoDB') { -%>
        return await Profile.findByIdAndUpdate(id, data, { new: true });
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        const profile = await Profile.findByPk(id);
        return await profile.update(data);
<% } -%>
<% if(!database) { -%>
        const profile = new Profile(`${data.name} NEW`);
        return profile;
<% } -%>
    }

    // Method for deleting an profile by its ID from the database
    async deleteProfileByID(id) {
<% if(database && databaseType === 'MongoDB') { -%>
        return await Profile.findByIdAndDelete(id);
<% } -%>
<% if(database && databaseType === 'PostgreSQL') { -%>
        const profile = await Profile.findByPk(id);
        await profile.destroy();
        return profile;
<% } -%>
<% if(!database) { -%>
        const profile = new Profile('John Doe');
        return profile;
<% } -%>
    }
}

// Export an instance of the profile service for use in other modules
export default new ProfileService();
